/** ALL *******************************************/
.stickyNote {
  perspective: 800px;
  filter: var(--shadow);
  width: var(--width);
  height: var(--height);
  text-align: center;
  color: #fff;
}
.content {
  background-color: var(--primary);
  width: var(--width);
  height: var(--height);
  padding-bottom: 4px;
  display: flex;
  justify-content: center;
  align-items: flex-end;
}
.content svg {
  max-height: 100%;
  max-width: var(--icon-width);
}

/** SIZES *****************************************/
.small {
  --width: 65px;
  --height: 65px;
  --icon-width: 35px;
  font-size: 11px;
  line-height: 11px;
}
.medium {
  --width: 100px;
  --height: 100px;
  --icon-width: 100px;
  font-size: 13px;
  line-height: 13px;
}

/** TAPED *****************************************/
.taped {
  position: relative;
  transform-style: preserve-3d;
}
.taped.small {
  --fold-height: 18px;
  --transform: rotateX(20deg) translateY(-2px);
  --box-shadow: inset 0 4px 8px var(--primary-darker);
}
.taped.medium {
  --fold-height: 30px;
  --transform: rotateX(20deg) translateY(-2px);
  --box-shadow: inset 0 10px 20px var(--primary-dark);
}
.taped::before {
  content: "";
  background-color: rgba(255, 255, 255, 0.6);
  position: absolute;
  width: 60%;
  height: 10%;
  top: -5%;
  left: 20%;
}
.taped .content {
  height: calc(var(--height) - var(--fold-height));
  padding-top: calc(var(--fold-height) / 2);
}
/* "fold" effect */
.taped .text {
  background-color: var(--primary);
  height: var(--fold-height);
  width: 100%;
  position: absolute;
  bottom: 0;
  left: 0;
  transition:
    transform 0.4s ease,
    box-shadow 0.6s ease;
  transform-origin: top;
  padding-top: calc(var(--fold-height) / 8);
  display: flex;
  align-items: center;
  justify-content: center;
}
.taped:hover .text,
.taped:active .text {
  transform: var(--transform);
  box-shadow: var(--box-shadow);
}

/** STICKER ***************************************/
@keyframes stickerLift {
  0% {
    transform: rotate3d(0, 0, 0, 0.1turn) translateZ(0px);
  }
  25% {
    transform: rotate3d(0.1, 0, -0.1, 0.01turn) translateX(1px) translateY(-1px)
      translateZ(0px);
  }
  35% {
    transform: rotate3d(0.1, 0, -0.1, 0.01turn) translateX(1px) translateY(-1px)
      translateZ(20px);
  }
  50% {
    transform: rotate3d(0, 0, 0, 0.1turn) translateX(1px) translateY(-1px)
      translateZ(60px);
  }
  100% {
    transform: rotate3d(0, 0, 0, 0.1turn) translateZ(60px);
  }
}

@keyframes stickerDrop {
  from {
    transform: translateZ(20px);
  }
  to {
    transform: rotate3d(0, 0, 0, 0.1turn) translateZ(0);
  }
}

.sticker {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  position: relative;
}
.sticker .content {
  border-radius: 50%;
  border: 3px solid rgba(255, 255, 255, 0.8);
  animation: stickerDrop 0.5s;
  animation-iteration-count: 1;
  animation-fill-mode: forwards;
}
.sticker:hover .content {
  animation: stickerLift 0.5s;
  animation-iteration-count: 1;
  transform-style: preserve-3d;
  animation-fill-mode: forwards;
}
.sticker .content svg {
  height: 90%;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}
.sticker .text {
  color: var(--font);
  transform: translateY(25%);
  transition: all 0.5s ease-in-out;
  position: absolute;
  top: 100%;
  left: auto;
  padding: 4px;
  border-radius: 20%;
  width: fit-content;
  display: flex;
}
.sticker:hover .text,
.sticker:active .text,
.sticker:focus .text {
  transition: all 0.3s ease-out;
  background-color: #fff;
  filter: var(--shadow);
  opacity: 1;
  transform: translateY(-10%);
}
